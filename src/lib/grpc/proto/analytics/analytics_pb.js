// source: analytics/analytics.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.analytics.AttendanceReportRequest', null, global);
goog.exportSymbol('proto.analytics.AttendanceReportResponse', null, global);
goog.exportSymbol('proto.analytics.CategoryAttendance', null, global);
goog.exportSymbol('proto.analytics.DateRange', null, global);
goog.exportSymbol('proto.analytics.ExpenseCategory', null, global);
goog.exportSymbol('proto.analytics.FinancialReportRequest', null, global);
goog.exportSymbol('proto.analytics.FinancialReportResponse', null, global);
goog.exportSymbol('proto.analytics.LocationAttendance', null, global);
goog.exportSymbol('proto.analytics.SchoolPerformanceData', null, global);
goog.exportSymbol('proto.analytics.TournamentIncome', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.DateRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.DateRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.DateRange.displayName = 'proto.analytics.DateRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.FinancialReportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.FinancialReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.FinancialReportRequest.displayName = 'proto.analytics.FinancialReportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.TournamentIncome = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.TournamentIncome, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.TournamentIncome.displayName = 'proto.analytics.TournamentIncome';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.SchoolPerformanceData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.SchoolPerformanceData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.SchoolPerformanceData.displayName = 'proto.analytics.SchoolPerformanceData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.ExpenseCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.ExpenseCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.ExpenseCategory.displayName = 'proto.analytics.ExpenseCategory';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.FinancialReportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.FinancialReportResponse.repeatedFields_, null);
};
goog.inherits(proto.analytics.FinancialReportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.FinancialReportResponse.displayName = 'proto.analytics.FinancialReportResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.AttendanceReportRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.AttendanceReportRequest.repeatedFields_, null);
};
goog.inherits(proto.analytics.AttendanceReportRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.AttendanceReportRequest.displayName = 'proto.analytics.AttendanceReportRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.CategoryAttendance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.CategoryAttendance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.CategoryAttendance.displayName = 'proto.analytics.CategoryAttendance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.LocationAttendance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.analytics.LocationAttendance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.LocationAttendance.displayName = 'proto.analytics.LocationAttendance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.analytics.AttendanceReportResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.analytics.AttendanceReportResponse.repeatedFields_, null);
};
goog.inherits(proto.analytics.AttendanceReportResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.analytics.AttendanceReportResponse.displayName = 'proto.analytics.AttendanceReportResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.DateRange.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.DateRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.DateRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.DateRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    startDate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    endDate: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.DateRange}
 */
proto.analytics.DateRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.DateRange;
  return proto.analytics.DateRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.DateRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.DateRange}
 */
proto.analytics.DateRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartDate(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.DateRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.DateRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.DateRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.DateRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartDate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEndDate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string start_date = 1;
 * @return {string}
 */
proto.analytics.DateRange.prototype.getStartDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.DateRange} returns this
 */
proto.analytics.DateRange.prototype.setStartDate = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string end_date = 2;
 * @return {string}
 */
proto.analytics.DateRange.prototype.getEndDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.DateRange} returns this
 */
proto.analytics.DateRange.prototype.setEndDate = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.FinancialReportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.FinancialReportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.FinancialReportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.FinancialReportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dateRange: (f = msg.getDateRange()) && proto.analytics.DateRange.toObject(includeInstance, f),
    tournamentId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    reportType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    groupBy: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.FinancialReportRequest}
 */
proto.analytics.FinancialReportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.FinancialReportRequest;
  return proto.analytics.FinancialReportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.FinancialReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.FinancialReportRequest}
 */
proto.analytics.FinancialReportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = new proto.analytics.DateRange;
      reader.readMessage(value,proto.analytics.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTournamentId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupBy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.FinancialReportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.FinancialReportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.FinancialReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.FinancialReportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.analytics.DateRange.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.analytics.FinancialReportRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.FinancialReportRequest} returns this
 */
proto.analytics.FinancialReportRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DateRange date_range = 2;
 * @return {?proto.analytics.DateRange}
 */
proto.analytics.FinancialReportRequest.prototype.getDateRange = function() {
  return /** @type{?proto.analytics.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.analytics.DateRange, 2));
};


/**
 * @param {?proto.analytics.DateRange|undefined} value
 * @return {!proto.analytics.FinancialReportRequest} returns this
*/
proto.analytics.FinancialReportRequest.prototype.setDateRange = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.analytics.FinancialReportRequest} returns this
 */
proto.analytics.FinancialReportRequest.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.analytics.FinancialReportRequest.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string tournament_id = 3;
 * @return {string}
 */
proto.analytics.FinancialReportRequest.prototype.getTournamentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.FinancialReportRequest} returns this
 */
proto.analytics.FinancialReportRequest.prototype.setTournamentId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.analytics.FinancialReportRequest} returns this
 */
proto.analytics.FinancialReportRequest.prototype.clearTournamentId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.analytics.FinancialReportRequest.prototype.hasTournamentId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string report_type = 4;
 * @return {string}
 */
proto.analytics.FinancialReportRequest.prototype.getReportType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.FinancialReportRequest} returns this
 */
proto.analytics.FinancialReportRequest.prototype.setReportType = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.analytics.FinancialReportRequest} returns this
 */
proto.analytics.FinancialReportRequest.prototype.clearReportType = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.analytics.FinancialReportRequest.prototype.hasReportType = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string group_by = 5;
 * @return {string}
 */
proto.analytics.FinancialReportRequest.prototype.getGroupBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.FinancialReportRequest} returns this
 */
proto.analytics.FinancialReportRequest.prototype.setGroupBy = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.analytics.FinancialReportRequest} returns this
 */
proto.analytics.FinancialReportRequest.prototype.clearGroupBy = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.analytics.FinancialReportRequest.prototype.hasGroupBy = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.TournamentIncome.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.TournamentIncome.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.TournamentIncome} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TournamentIncome.toObject = function(includeInstance, msg) {
  var f, obj = {
    tournamentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tournamentName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    leagueId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    leagueName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    totalIncome: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    netRevenue: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    netProfit: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    tournamentDate: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.TournamentIncome}
 */
proto.analytics.TournamentIncome.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.TournamentIncome;
  return proto.analytics.TournamentIncome.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.TournamentIncome} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.TournamentIncome}
 */
proto.analytics.TournamentIncome.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTournamentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTournamentName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeagueId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLeagueName(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalIncome(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNetRevenue(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setNetProfit(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTournamentDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.TournamentIncome.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.TournamentIncome.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.TournamentIncome} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.TournamentIncome.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTournamentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTournamentName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLeagueId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLeagueName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTotalIncome();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getNetRevenue();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getNetProfit();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getTournamentDate();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string tournament_id = 1;
 * @return {string}
 */
proto.analytics.TournamentIncome.prototype.getTournamentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.TournamentIncome} returns this
 */
proto.analytics.TournamentIncome.prototype.setTournamentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tournament_name = 2;
 * @return {string}
 */
proto.analytics.TournamentIncome.prototype.getTournamentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.TournamentIncome} returns this
 */
proto.analytics.TournamentIncome.prototype.setTournamentName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string league_id = 3;
 * @return {string}
 */
proto.analytics.TournamentIncome.prototype.getLeagueId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.TournamentIncome} returns this
 */
proto.analytics.TournamentIncome.prototype.setLeagueId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string league_name = 4;
 * @return {string}
 */
proto.analytics.TournamentIncome.prototype.getLeagueName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.TournamentIncome} returns this
 */
proto.analytics.TournamentIncome.prototype.setLeagueName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional double total_income = 5;
 * @return {number}
 */
proto.analytics.TournamentIncome.prototype.getTotalIncome = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.TournamentIncome} returns this
 */
proto.analytics.TournamentIncome.prototype.setTotalIncome = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double net_revenue = 6;
 * @return {number}
 */
proto.analytics.TournamentIncome.prototype.getNetRevenue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.TournamentIncome} returns this
 */
proto.analytics.TournamentIncome.prototype.setNetRevenue = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double net_profit = 7;
 * @return {number}
 */
proto.analytics.TournamentIncome.prototype.getNetProfit = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.TournamentIncome} returns this
 */
proto.analytics.TournamentIncome.prototype.setNetProfit = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional string tournament_date = 8;
 * @return {string}
 */
proto.analytics.TournamentIncome.prototype.getTournamentDate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.TournamentIncome} returns this
 */
proto.analytics.TournamentIncome.prototype.setTournamentDate = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.SchoolPerformanceData.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.SchoolPerformanceData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.SchoolPerformanceData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.SchoolPerformanceData.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalAmount: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    schoolCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.SchoolPerformanceData}
 */
proto.analytics.SchoolPerformanceData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.SchoolPerformanceData;
  return proto.analytics.SchoolPerformanceData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.SchoolPerformanceData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.SchoolPerformanceData}
 */
proto.analytics.SchoolPerformanceData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalAmount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSchoolCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.SchoolPerformanceData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.SchoolPerformanceData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.SchoolPerformanceData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.SchoolPerformanceData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalAmount();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getSchoolCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string group_name = 1;
 * @return {string}
 */
proto.analytics.SchoolPerformanceData.prototype.getGroupName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.SchoolPerformanceData} returns this
 */
proto.analytics.SchoolPerformanceData.prototype.setGroupName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double total_amount = 2;
 * @return {number}
 */
proto.analytics.SchoolPerformanceData.prototype.getTotalAmount = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.SchoolPerformanceData} returns this
 */
proto.analytics.SchoolPerformanceData.prototype.setTotalAmount = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional int32 school_count = 3;
 * @return {number}
 */
proto.analytics.SchoolPerformanceData.prototype.getSchoolCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.SchoolPerformanceData} returns this
 */
proto.analytics.SchoolPerformanceData.prototype.setSchoolCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.ExpenseCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.ExpenseCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.ExpenseCategory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.ExpenseCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    tournamentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tournamentName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    foodExpense: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    transportExpense: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    perDiemExpense: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    awardingExpense: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    stationaryExpense: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    otherExpenses: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    totalExpense: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.ExpenseCategory}
 */
proto.analytics.ExpenseCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.ExpenseCategory;
  return proto.analytics.ExpenseCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.ExpenseCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.ExpenseCategory}
 */
proto.analytics.ExpenseCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTournamentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTournamentName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setFoodExpense(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTransportExpense(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPerDiemExpense(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAwardingExpense(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setStationaryExpense(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOtherExpenses(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalExpense(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.ExpenseCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.ExpenseCategory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.ExpenseCategory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.ExpenseCategory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTournamentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTournamentName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFoodExpense();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getTransportExpense();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getPerDiemExpense();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getAwardingExpense();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getStationaryExpense();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getOtherExpenses();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getTotalExpense();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
};


/**
 * optional string tournament_id = 1;
 * @return {string}
 */
proto.analytics.ExpenseCategory.prototype.getTournamentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.ExpenseCategory} returns this
 */
proto.analytics.ExpenseCategory.prototype.setTournamentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string tournament_name = 2;
 * @return {string}
 */
proto.analytics.ExpenseCategory.prototype.getTournamentName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.ExpenseCategory} returns this
 */
proto.analytics.ExpenseCategory.prototype.setTournamentName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional double food_expense = 3;
 * @return {number}
 */
proto.analytics.ExpenseCategory.prototype.getFoodExpense = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.ExpenseCategory} returns this
 */
proto.analytics.ExpenseCategory.prototype.setFoodExpense = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double transport_expense = 4;
 * @return {number}
 */
proto.analytics.ExpenseCategory.prototype.getTransportExpense = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.ExpenseCategory} returns this
 */
proto.analytics.ExpenseCategory.prototype.setTransportExpense = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double per_diem_expense = 5;
 * @return {number}
 */
proto.analytics.ExpenseCategory.prototype.getPerDiemExpense = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.ExpenseCategory} returns this
 */
proto.analytics.ExpenseCategory.prototype.setPerDiemExpense = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double awarding_expense = 6;
 * @return {number}
 */
proto.analytics.ExpenseCategory.prototype.getAwardingExpense = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.ExpenseCategory} returns this
 */
proto.analytics.ExpenseCategory.prototype.setAwardingExpense = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double stationary_expense = 7;
 * @return {number}
 */
proto.analytics.ExpenseCategory.prototype.getStationaryExpense = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.ExpenseCategory} returns this
 */
proto.analytics.ExpenseCategory.prototype.setStationaryExpense = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double other_expenses = 8;
 * @return {number}
 */
proto.analytics.ExpenseCategory.prototype.getOtherExpenses = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.ExpenseCategory} returns this
 */
proto.analytics.ExpenseCategory.prototype.setOtherExpenses = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double total_expense = 9;
 * @return {number}
 */
proto.analytics.ExpenseCategory.prototype.getTotalExpense = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.ExpenseCategory} returns this
 */
proto.analytics.ExpenseCategory.prototype.setTotalExpense = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.FinancialReportResponse.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.FinancialReportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.FinancialReportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.FinancialReportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.FinancialReportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tournamentIncomesList: jspb.Message.toObjectList(msg.getTournamentIncomesList(),
    proto.analytics.TournamentIncome.toObject, includeInstance),
    schoolPerformanceList: jspb.Message.toObjectList(msg.getSchoolPerformanceList(),
    proto.analytics.SchoolPerformanceData.toObject, includeInstance),
    expenseCategoriesList: jspb.Message.toObjectList(msg.getExpenseCategoriesList(),
    proto.analytics.ExpenseCategory.toObject, includeInstance),
    reportType: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.FinancialReportResponse}
 */
proto.analytics.FinancialReportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.FinancialReportResponse;
  return proto.analytics.FinancialReportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.FinancialReportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.FinancialReportResponse}
 */
proto.analytics.FinancialReportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.analytics.TournamentIncome;
      reader.readMessage(value,proto.analytics.TournamentIncome.deserializeBinaryFromReader);
      msg.addTournamentIncomes(value);
      break;
    case 2:
      var value = new proto.analytics.SchoolPerformanceData;
      reader.readMessage(value,proto.analytics.SchoolPerformanceData.deserializeBinaryFromReader);
      msg.addSchoolPerformance(value);
      break;
    case 3:
      var value = new proto.analytics.ExpenseCategory;
      reader.readMessage(value,proto.analytics.ExpenseCategory.deserializeBinaryFromReader);
      msg.addExpenseCategories(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.FinancialReportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.FinancialReportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.FinancialReportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.FinancialReportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTournamentIncomesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.analytics.TournamentIncome.serializeBinaryToWriter
    );
  }
  f = message.getSchoolPerformanceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.analytics.SchoolPerformanceData.serializeBinaryToWriter
    );
  }
  f = message.getExpenseCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.analytics.ExpenseCategory.serializeBinaryToWriter
    );
  }
  f = message.getReportType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated TournamentIncome tournament_incomes = 1;
 * @return {!Array<!proto.analytics.TournamentIncome>}
 */
proto.analytics.FinancialReportResponse.prototype.getTournamentIncomesList = function() {
  return /** @type{!Array<!proto.analytics.TournamentIncome>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.TournamentIncome, 1));
};


/**
 * @param {!Array<!proto.analytics.TournamentIncome>} value
 * @return {!proto.analytics.FinancialReportResponse} returns this
*/
proto.analytics.FinancialReportResponse.prototype.setTournamentIncomesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.analytics.TournamentIncome=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.TournamentIncome}
 */
proto.analytics.FinancialReportResponse.prototype.addTournamentIncomes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.analytics.TournamentIncome, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.analytics.FinancialReportResponse} returns this
 */
proto.analytics.FinancialReportResponse.prototype.clearTournamentIncomesList = function() {
  return this.setTournamentIncomesList([]);
};


/**
 * repeated SchoolPerformanceData school_performance = 2;
 * @return {!Array<!proto.analytics.SchoolPerformanceData>}
 */
proto.analytics.FinancialReportResponse.prototype.getSchoolPerformanceList = function() {
  return /** @type{!Array<!proto.analytics.SchoolPerformanceData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.SchoolPerformanceData, 2));
};


/**
 * @param {!Array<!proto.analytics.SchoolPerformanceData>} value
 * @return {!proto.analytics.FinancialReportResponse} returns this
*/
proto.analytics.FinancialReportResponse.prototype.setSchoolPerformanceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.analytics.SchoolPerformanceData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.SchoolPerformanceData}
 */
proto.analytics.FinancialReportResponse.prototype.addSchoolPerformance = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.analytics.SchoolPerformanceData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.analytics.FinancialReportResponse} returns this
 */
proto.analytics.FinancialReportResponse.prototype.clearSchoolPerformanceList = function() {
  return this.setSchoolPerformanceList([]);
};


/**
 * repeated ExpenseCategory expense_categories = 3;
 * @return {!Array<!proto.analytics.ExpenseCategory>}
 */
proto.analytics.FinancialReportResponse.prototype.getExpenseCategoriesList = function() {
  return /** @type{!Array<!proto.analytics.ExpenseCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.ExpenseCategory, 3));
};


/**
 * @param {!Array<!proto.analytics.ExpenseCategory>} value
 * @return {!proto.analytics.FinancialReportResponse} returns this
*/
proto.analytics.FinancialReportResponse.prototype.setExpenseCategoriesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.analytics.ExpenseCategory=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.ExpenseCategory}
 */
proto.analytics.FinancialReportResponse.prototype.addExpenseCategories = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.analytics.ExpenseCategory, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.analytics.FinancialReportResponse} returns this
 */
proto.analytics.FinancialReportResponse.prototype.clearExpenseCategoriesList = function() {
  return this.setExpenseCategoriesList([]);
};


/**
 * optional string report_type = 4;
 * @return {string}
 */
proto.analytics.FinancialReportResponse.prototype.getReportType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.FinancialReportResponse} returns this
 */
proto.analytics.FinancialReportResponse.prototype.setReportType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.AttendanceReportRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.AttendanceReportRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.AttendanceReportRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.AttendanceReportRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AttendanceReportRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dateRange: (f = msg.getDateRange()) && proto.analytics.DateRange.toObject(includeInstance, f),
    tournamentId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    reportType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    countriesList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.AttendanceReportRequest}
 */
proto.analytics.AttendanceReportRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.AttendanceReportRequest;
  return proto.analytics.AttendanceReportRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.AttendanceReportRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.AttendanceReportRequest}
 */
proto.analytics.AttendanceReportRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = new proto.analytics.DateRange;
      reader.readMessage(value,proto.analytics.DateRange.deserializeBinaryFromReader);
      msg.setDateRange(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTournamentId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.AttendanceReportRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.AttendanceReportRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.AttendanceReportRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AttendanceReportRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDateRange();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.analytics.DateRange.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReportType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.analytics.AttendanceReportRequest.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.AttendanceReportRequest} returns this
 */
proto.analytics.AttendanceReportRequest.prototype.setToken = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional DateRange date_range = 2;
 * @return {?proto.analytics.DateRange}
 */
proto.analytics.AttendanceReportRequest.prototype.getDateRange = function() {
  return /** @type{?proto.analytics.DateRange} */ (
    jspb.Message.getWrapperField(this, proto.analytics.DateRange, 2));
};


/**
 * @param {?proto.analytics.DateRange|undefined} value
 * @return {!proto.analytics.AttendanceReportRequest} returns this
*/
proto.analytics.AttendanceReportRequest.prototype.setDateRange = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.analytics.AttendanceReportRequest} returns this
 */
proto.analytics.AttendanceReportRequest.prototype.clearDateRange = function() {
  return this.setDateRange(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.analytics.AttendanceReportRequest.prototype.hasDateRange = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string tournament_id = 3;
 * @return {string}
 */
proto.analytics.AttendanceReportRequest.prototype.getTournamentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.AttendanceReportRequest} returns this
 */
proto.analytics.AttendanceReportRequest.prototype.setTournamentId = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.analytics.AttendanceReportRequest} returns this
 */
proto.analytics.AttendanceReportRequest.prototype.clearTournamentId = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.analytics.AttendanceReportRequest.prototype.hasTournamentId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string report_type = 4;
 * @return {string}
 */
proto.analytics.AttendanceReportRequest.prototype.getReportType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.AttendanceReportRequest} returns this
 */
proto.analytics.AttendanceReportRequest.prototype.setReportType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string countries = 5;
 * @return {!Array<string>}
 */
proto.analytics.AttendanceReportRequest.prototype.getCountriesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.analytics.AttendanceReportRequest} returns this
 */
proto.analytics.AttendanceReportRequest.prototype.setCountriesList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.analytics.AttendanceReportRequest} returns this
 */
proto.analytics.AttendanceReportRequest.prototype.addCountries = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.analytics.AttendanceReportRequest} returns this
 */
proto.analytics.AttendanceReportRequest.prototype.clearCountriesList = function() {
  return this.setCountriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.CategoryAttendance.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.CategoryAttendance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.CategoryAttendance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.CategoryAttendance.toObject = function(includeInstance, msg) {
  var f, obj = {
    category: jspb.Message.getFieldWithDefault(msg, 1, ""),
    schoolCount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    percentageChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.CategoryAttendance}
 */
proto.analytics.CategoryAttendance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.CategoryAttendance;
  return proto.analytics.CategoryAttendance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.CategoryAttendance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.CategoryAttendance}
 */
proto.analytics.CategoryAttendance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSchoolCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPercentageChange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.CategoryAttendance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.CategoryAttendance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.CategoryAttendance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.CategoryAttendance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSchoolCount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getPercentageChange();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string category = 1;
 * @return {string}
 */
proto.analytics.CategoryAttendance.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.CategoryAttendance} returns this
 */
proto.analytics.CategoryAttendance.prototype.setCategory = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 school_count = 2;
 * @return {number}
 */
proto.analytics.CategoryAttendance.prototype.getSchoolCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.CategoryAttendance} returns this
 */
proto.analytics.CategoryAttendance.prototype.setSchoolCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double percentage_change = 3;
 * @return {number}
 */
proto.analytics.CategoryAttendance.prototype.getPercentageChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.CategoryAttendance} returns this
 */
proto.analytics.CategoryAttendance.prototype.setPercentageChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.LocationAttendance.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.LocationAttendance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.LocationAttendance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.LocationAttendance.toObject = function(includeInstance, msg) {
  var f, obj = {
    location: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locationType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    schoolCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    percentageChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.LocationAttendance}
 */
proto.analytics.LocationAttendance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.LocationAttendance;
  return proto.analytics.LocationAttendance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.LocationAttendance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.LocationAttendance}
 */
proto.analytics.LocationAttendance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocationType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSchoolCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPercentageChange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.LocationAttendance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.LocationAttendance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.LocationAttendance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.LocationAttendance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocation();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocationType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSchoolCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getPercentageChange();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional string location = 1;
 * @return {string}
 */
proto.analytics.LocationAttendance.prototype.getLocation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.LocationAttendance} returns this
 */
proto.analytics.LocationAttendance.prototype.setLocation = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string location_type = 2;
 * @return {string}
 */
proto.analytics.LocationAttendance.prototype.getLocationType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.LocationAttendance} returns this
 */
proto.analytics.LocationAttendance.prototype.setLocationType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 school_count = 3;
 * @return {number}
 */
proto.analytics.LocationAttendance.prototype.getSchoolCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.LocationAttendance} returns this
 */
proto.analytics.LocationAttendance.prototype.setSchoolCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double percentage_change = 4;
 * @return {number}
 */
proto.analytics.LocationAttendance.prototype.getPercentageChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.LocationAttendance} returns this
 */
proto.analytics.LocationAttendance.prototype.setPercentageChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.analytics.AttendanceReportResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.analytics.AttendanceReportResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.analytics.AttendanceReportResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.analytics.AttendanceReportResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AttendanceReportResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    reportType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    categoryAttendanceList: jspb.Message.toObjectList(msg.getCategoryAttendanceList(),
    proto.analytics.CategoryAttendance.toObject, includeInstance),
    locationAttendanceList: jspb.Message.toObjectList(msg.getLocationAttendanceList(),
    proto.analytics.LocationAttendance.toObject, includeInstance),
    totalSchools: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalPercentageChange: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.analytics.AttendanceReportResponse}
 */
proto.analytics.AttendanceReportResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.analytics.AttendanceReportResponse;
  return proto.analytics.AttendanceReportResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.analytics.AttendanceReportResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.analytics.AttendanceReportResponse}
 */
proto.analytics.AttendanceReportResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setReportType(value);
      break;
    case 2:
      var value = new proto.analytics.CategoryAttendance;
      reader.readMessage(value,proto.analytics.CategoryAttendance.deserializeBinaryFromReader);
      msg.addCategoryAttendance(value);
      break;
    case 3:
      var value = new proto.analytics.LocationAttendance;
      reader.readMessage(value,proto.analytics.LocationAttendance.deserializeBinaryFromReader);
      msg.addLocationAttendance(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalSchools(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalPercentageChange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.analytics.AttendanceReportResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.analytics.AttendanceReportResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.analytics.AttendanceReportResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.analytics.AttendanceReportResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReportType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategoryAttendanceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.analytics.CategoryAttendance.serializeBinaryToWriter
    );
  }
  f = message.getLocationAttendanceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.analytics.LocationAttendance.serializeBinaryToWriter
    );
  }
  f = message.getTotalSchools();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTotalPercentageChange();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
};


/**
 * optional string report_type = 1;
 * @return {string}
 */
proto.analytics.AttendanceReportResponse.prototype.getReportType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.analytics.AttendanceReportResponse} returns this
 */
proto.analytics.AttendanceReportResponse.prototype.setReportType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated CategoryAttendance category_attendance = 2;
 * @return {!Array<!proto.analytics.CategoryAttendance>}
 */
proto.analytics.AttendanceReportResponse.prototype.getCategoryAttendanceList = function() {
  return /** @type{!Array<!proto.analytics.CategoryAttendance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.CategoryAttendance, 2));
};


/**
 * @param {!Array<!proto.analytics.CategoryAttendance>} value
 * @return {!proto.analytics.AttendanceReportResponse} returns this
*/
proto.analytics.AttendanceReportResponse.prototype.setCategoryAttendanceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.analytics.CategoryAttendance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.CategoryAttendance}
 */
proto.analytics.AttendanceReportResponse.prototype.addCategoryAttendance = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.analytics.CategoryAttendance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.analytics.AttendanceReportResponse} returns this
 */
proto.analytics.AttendanceReportResponse.prototype.clearCategoryAttendanceList = function() {
  return this.setCategoryAttendanceList([]);
};


/**
 * repeated LocationAttendance location_attendance = 3;
 * @return {!Array<!proto.analytics.LocationAttendance>}
 */
proto.analytics.AttendanceReportResponse.prototype.getLocationAttendanceList = function() {
  return /** @type{!Array<!proto.analytics.LocationAttendance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.analytics.LocationAttendance, 3));
};


/**
 * @param {!Array<!proto.analytics.LocationAttendance>} value
 * @return {!proto.analytics.AttendanceReportResponse} returns this
*/
proto.analytics.AttendanceReportResponse.prototype.setLocationAttendanceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.analytics.LocationAttendance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.analytics.LocationAttendance}
 */
proto.analytics.AttendanceReportResponse.prototype.addLocationAttendance = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.analytics.LocationAttendance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.analytics.AttendanceReportResponse} returns this
 */
proto.analytics.AttendanceReportResponse.prototype.clearLocationAttendanceList = function() {
  return this.setLocationAttendanceList([]);
};


/**
 * optional int32 total_schools = 4;
 * @return {number}
 */
proto.analytics.AttendanceReportResponse.prototype.getTotalSchools = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.AttendanceReportResponse} returns this
 */
proto.analytics.AttendanceReportResponse.prototype.setTotalSchools = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double total_percentage_change = 5;
 * @return {number}
 */
proto.analytics.AttendanceReportResponse.prototype.getTotalPercentageChange = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.analytics.AttendanceReportResponse} returns this
 */
proto.analytics.AttendanceReportResponse.prototype.setTotalPercentageChange = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


goog.object.extend(exports, proto.analytics);
